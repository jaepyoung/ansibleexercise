ansible all --list-hosts

ansible apacheweb -m ping  ==> ping to apacheweb group
ansible tcox -i hosts -m ping ==> overwrite the host config with current directory hosts file
export ANSIBLE_CONFIG=/home/test/test/config/ansible.cfg
ansible apacheweb -m ping 

Ansible cfg priorityies 

ANSIBLE_CONFIG (an environment variable)
ansible.cfg 
.ansible.cfg
/etc/ansible/ansible.cfg

ansible apacheweb -s -m shell -a 'yum list installed|grep python'
ansible all -m seutup ==> shows all info
ansible all -m setup --tree /tmp/facts
ansible appserver -m setup -a 'filter=ansible_ip*'
ansible appserver -m setup -a 'filter=*ip4*'

ansible apacheweb -m setup -a 'filter=ansible_domain'
ansible apacheweb -m setup -a 'filter=ansible_fqdn'
ansible apacheweb -m setup -a 'filter=ansible_interfaces'
ansible apacheweb -m setup -a 'filter=ansible_kernel'
ansible apacheweb -m setup -a 'filter=ansible_memtotal_mb'
ansible apacheweb -m setup -a 'filter=ansible_proc*'

state=absent ==> Just let us know the if absent. 

ansible-playbook webserver.yml --check
async: timeoute time
pull : how often 


ansible apacheweb -m setup -a 'filter=ansible_os_family' ==> Show the apacheweb servers os family
ansible-vault create secure.yml ==> create encrypted file

ansible-vault edit secure.yml ==> edit file
ansible-valut rekey secure.yml ==> Change the password
ansible-vault decrypt secure.yml ==> Decrypt the file
ansible-vault encrypt  accounts.yml

ansible-playbook waitfor.yml --vault-password-file somefile.txt
ansible-playbook tags.yml --tags "verification" ==> only executes this tool

ansible-playbook startat.yml --start-at-task='Install Lynx'
ansible-playbook startat.yml --step

ansible-playbook fromcmdline.yml --extra-vars "hosts=apacheweb user=test pkg=telnet"

Roles: 
ansible-playbook websevers.yml 

ansible-playbook dynamic.yml --extra-vars "hosts=apacheweb"
ansible-playbook dynamic.yml --extra-vars "hosts=apacheweb user=test role=redhat_webservers"
